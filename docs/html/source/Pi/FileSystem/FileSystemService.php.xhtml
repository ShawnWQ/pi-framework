<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of FileSystemService.php</title><link rel="stylesheet" type="text/css" href="../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file FileSystemService.php</h1><p>
                        Size: 2,733 Bytes - Last Modified: 2015-06-23T17:10:30+00:00</p><section><h2><small>/home/gui/workspace/pi-services/src/Pi/FileSystem/</small>FileSystemService.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a></td><td class="line"><div id="line1"><pre><span class="token T_INLINE_HTML">&lt;?hh</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_INLINE_HTML">namespace Pi\FileSystem;</span></pre></div><div id="line4"><pre><span class="token T_INLINE_HTML">use Pi\Service;</span></pre></div><div id="line5"><pre><span class="token T_INLINE_HTML">use Pi\Common\RandomString;</span></pre></div><div id="line6"><pre><span class="token T_INLINE_HTML">use Pi\ServiceModel\ListFilesRequest;</span></pre></div><div id="line7"><pre><span class="token T_INLINE_HTML">use Pi\ServiceModel\ListFilesResponse;</span></pre></div><div id="line8"><pre><span class="token T_INLINE_HTML">use Pi\PiFileMapper;</span></pre></div><div id="line9"><br/></div><div id="line10"><pre><span class="token T_INLINE_HTML">class FileSystemService extends Service {</span></pre></div><div id="line11"><br/></div><div id="line12"><pre><span class="token T_INLINE_HTML">	public FileSystemConfiguration $config;</span></pre></div><div id="line13"><br/></div><div id="line14"><pre><span class="token T_INLINE_HTML">	public FileEntityRepository $repository;</span></pre></div><div id="line15"><br/></div><div id="line16"><pre><span class="token T_INLINE_HTML">	public function __construct()</span></pre></div><div id="line17"><pre><span class="token T_INLINE_HTML">	{</span></pre></div><div id="line18"><pre><span class="token T_INLINE_HTML">		parent::__construct();</span></pre></div><div id="line19"><pre><span class="token T_INLINE_HTML">	}</span></pre></div><div id="line20"><br/></div><div id="line21"><pre><span class="token T_INLINE_HTML">	&lt;&lt;Dependency('FileSystemConfiguration')&gt;&gt;</span></pre></div><div id="line22"><pre><span class="token T_INLINE_HTML">	public function config($value = null)</span></pre></div><div id="line23"><pre><span class="token T_INLINE_HTML">	{</span></pre></div><div id="line24"><pre><span class="token T_INLINE_HTML">		if($value === null) return $this-&gt;config;</span></pre></div><div id="line25"><pre><span class="token T_INLINE_HTML">		$this-&gt;config = $value;</span></pre></div><div id="line26"><pre><span class="token T_INLINE_HTML">	}</span></pre></div><div id="line27"><br/></div><div id="line28"><pre><span class="token T_INLINE_HTML">	/**</span></pre></div><div id="line29"><pre><span class="token T_INLINE_HTML">	 * @param FileGet $request</span></pre></div><div id="line30"><pre><span class="token T_INLINE_HTML">	 */</span></pre></div><div id="line31"><pre><span class="token T_INLINE_HTML">	&lt;&lt;Request,Method('GET'),Route('/files-pub/')&gt;&gt;</span></pre></div><div id="line32"><pre><span class="token T_INLINE_HTML">	public function get(FileGet $request)</span></pre></div><div id="line33"><pre><span class="token T_INLINE_HTML">	{</span></pre></div><div id="line34"><br/></div><div id="line35"><pre><span class="token T_INLINE_HTML">	}</span></pre></div><div id="line36"><br/></div><div id="line37"><pre><span class="token T_INLINE_HTML">	&lt;&lt;Request,Method('GET'),Route('/files-list')&gt;&gt;</span></pre></div><div id="line38"><pre><span class="token T_INLINE_HTML">	public function ls(ListFilesRequest $request)</span></pre></div><div id="line39"><pre><span class="token T_INLINE_HTML">	{</span></pre></div><div id="line40"><pre><span class="token T_INLINE_HTML">		$response = new ListFilesResponse();</span></pre></div><div id="line41"><pre><span class="token T_INLINE_HTML">		</span></pre></div><div id="line42"><pre><span class="token T_INLINE_HTML">		$fileMapper = new PiFileMapper(Set{$request-&gt;getDirPath()});</span></pre></div><div id="line43"><pre><span class="token T_INLINE_HTML">		$map = $fileMapper-&gt;getMap();</span></pre></div><div id="line44"><br/></div><div id="line45"><pre><span class="token T_INLINE_HTML">		$response-&gt;setFiles($map);</span></pre></div><div id="line46"><pre><span class="token T_INLINE_HTML">		return $response;</span></pre></div><div id="line47"><pre><span class="token T_INLINE_HTML">	}</span></pre></div><div id="line48"><br/></div><div id="line49"><pre><span class="token T_INLINE_HTML">	&lt;&lt;Request,Auth,Method('GET'),Route('/files')&gt;&gt;</span></pre></div><div id="line50"><pre><span class="token T_INLINE_HTML">	public function query(FileFind $request)</span></pre></div><div id="line51"><pre><span class="token T_INLINE_HTML">	{</span></pre></div><div id="line52"><br/></div><div id="line53"><pre><span class="token T_INLINE_HTML">	}</span></pre></div><div id="line54"><br/></div><div id="line55"><pre><span class="token T_INLINE_HTML">	&lt;&lt;Request,Method('GET'),Route('/files/:fileId')&gt;&gt;</span></pre></div><div id="line56"><pre><span class="token T_INLINE_HTML">	public function getPublic(FileGet $request)</span></pre></div><div id="line57"><pre><span class="token T_INLINE_HTML">	{</span></pre></div><div id="line58"><pre><span class="token T_INLINE_HTML">		$entity = $this-&gt;repository-&gt;get($request-&gt;fileId());</span></pre></div><div id="line59"><br/></div><div id="line60"><pre><span class="token T_INLINE_HTML">		$response = new FileGetResponse();</span></pre></div><div id="line61"><pre><span class="token T_INLINE_HTML">  		$response-&gt;fileName($entity-&gt;fileName());</span></pre></div><div id="line62"><br/></div><div id="line63"><pre><span class="token T_INLINE_HTML">		return $entity;</span></pre></div><div id="line64"><pre><span class="token T_INLINE_HTML">	}</span></pre></div><div id="line65"><br/></div><div id="line66"><pre><span class="token T_INLINE_HTML">	&lt;&lt;Request,Method('POST'),Route('/filesystem')&gt;&gt;</span></pre></div><div id="line67"><pre><span class="token T_INLINE_HTML">	public function upload(FileUpload $request)</span></pre></div><div id="line68"><pre><span class="token T_INLINE_HTML">	{</span></pre></div><div id="line69"><br/></div><div id="line70"><pre><span class="token T_INLINE_HTML">		$fileNameToken = RandomString::generate(20);</span></pre></div><div id="line71"><pre><span class="token T_INLINE_HTML">		$tokenId = new \MongoId();</span></pre></div><div id="line72"><br/></div><div id="line73"><pre><span class="token T_INLINE_HTML">		$fileId = new \MongoId();</span></pre></div><div id="line74"><pre><span class="token T_INLINE_HTML">		</span></pre></div><div id="line75"><pre><span class="token T_INLINE_HTML">		$fileName =  $fileNameToken . '_' . $request-&gt;file()-&gt;name();</span></pre></div><div id="line76"><pre><span class="token T_INLINE_HTML">		$savePath = $this-&gt;config-&gt;storeDir() . '/' . $fileName;</span></pre></div><div id="line77"><br/></div><div id="line78"><pre><span class="token T_INLINE_HTML">		$entity = new FileEntity();</span></pre></div><div id="line79"><pre><span class="token T_INLINE_HTML">		$entity-&gt;name($fileName);</span></pre></div><div id="line80"><pre><span class="token T_INLINE_HTML">		$entity-&gt;ownerToken((string)$tokenId);</span></pre></div><div id="line81"><pre><span class="token T_INLINE_HTML">		$entity-&gt;fileName($savePath);</span></pre></div><div id="line82"><pre><span class="token T_INLINE_HTML">		$entity-&gt;extension($request-&gt;file()-&gt;extension());</span></pre></div><div id="line83"><br/></div><div id="line84"><br/></div><div id="line85"><pre><span class="token T_INLINE_HTML">		//$repo = $this-&gt;appHost-&gt;container()-&gt;getRepository($entity);</span></pre></div><div id="line86"><br/></div><div id="line87"><pre><span class="token T_INLINE_HTML">		$this-&gt;repository-&gt;insert($entity);</span></pre></div><div id="line88"><br/></div><div id="line89"><pre><span class="token T_INLINE_HTML">		$this-&gt;repository-&gt;commit();</span></pre></div><div id="line90"><pre><span class="token T_INLINE_HTML">		</span></pre></div><div id="line91"><pre><span class="token T_INLINE_HTML">		move_uploaded_file($request-&gt;file()-&gt;tmpName(), $savePath);</span></pre></div><div id="line92"><br/></div><div id="line93"><pre><span class="token T_INLINE_HTML">		if($request-&gt;generateThumbnail()) {</span></pre></div><div id="line94"><br/></div><div id="line95"><pre><span class="token T_INLINE_HTML">			$thumb = $this-&gt;config-&gt;storeDir() . '/150_' . $fileName;</span></pre></div><div id="line96"><br/></div><div id="line97"><pre><span class="token T_INLINE_HTML">			$image = new \Imagick($savePath);</span></pre></div><div id="line98"><br/></div><div id="line99"><pre><span class="token T_INLINE_HTML">			$image-&gt;thumbnailImage(150, 0);</span></pre></div><div id="line100"><pre><span class="token T_INLINE_HTML">			$image-&gt;writeImage($thumb);</span></pre></div><div id="line101"><br/></div><div id="line102"><pre><span class="token T_INLINE_HTML">		}</span></pre></div><div id="line103"><br/></div><div id="line104"><pre><span class="token T_INLINE_HTML">		$response = new FileUploadResponse();</span></pre></div><div id="line105"><pre><span class="token T_INLINE_HTML">		$response-&gt;fileId($entity-&gt;id());</span></pre></div><div id="line106"><pre><span class="token T_INLINE_HTML">		$response-&gt;ownerToken($tokenId);</span></pre></div><div id="line107"><pre><span class="token T_INLINE_HTML">		$protocol = 'http';</span></pre></div><div id="line108"><pre><span class="token T_INLINE_HTML">		$response-&gt;uriPublic(sprintf('%s://%s/files/%s', $protocol, $this-&gt;appConfig()-&gt;domain(), (string)$fileName));</span></pre></div><div id="line109"><pre><span class="token T_INLINE_HTML">		$response-&gt;uri(sprintf('%s://%s/files/%s', $protocol, $this-&gt;appConfig()-&gt;domain(), (string)$entity-&gt;id()));</span></pre></div><div id="line110"><br/></div><div id="line111"><pre><span class="token T_INLINE_HTML">		return $response;</span></pre></div><div id="line112"><pre><span class="token T_INLINE_HTML">	}</span></pre></div><div id="line113"><br/></div><div id="line114"><pre><span class="token T_INLINE_HTML">	private function getTokenId(string $fileName)</span></pre></div><div id="line115"><pre><span class="token T_INLINE_HTML">	{</span></pre></div><div id="line116"><pre><span class="token T_INLINE_HTML">		return current(array_slice(explode("#", $fileName), 0,1));</span></pre></div><div id="line117"><pre><span class="token T_INLINE_HTML">	}</span></pre></div><div id="line118"><pre><span class="token T_INLINE_HTML">}</span></pre></div><div id="line119"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2015 by Arne Blankerts</span></footer></body></html>
