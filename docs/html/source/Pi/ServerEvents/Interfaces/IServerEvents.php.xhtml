<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of IServerEvents.php</title><link rel="stylesheet" type="text/css" href="../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file IServerEvents.php</h1><p>
                        Size: 1,537 Bytes - Last Modified: 2015-06-05T23:18:07+00:00</p><section><h2><small>/home/gui/workspace/pi-services/src/Pi/ServerEvents/Interfaces/</small>IServerEvents.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a></td><td class="line"><div id="line1"><pre><span class="token T_INLINE_HTML">&lt;?hh</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_INLINE_HTML">namespace Pi\ServerEvents\Interfaces;</span></pre></div><div id="line4"><br/></div><div id="line5"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IDisposable;</span></pre></div><div id="line6"><br/></div><div id="line7"><pre><span class="token T_INLINE_HTML">interface IServerEvents extends IDisposable</span></pre></div><div id="line8"><pre><span class="token T_INLINE_HTML">{</span></pre></div><div id="line9"><pre><span class="token T_INLINE_HTML">    // External API's</span></pre></div><div id="line10"><pre><span class="token T_INLINE_HTML">    public function notifyAll(string $selector, object $message) : void;</span></pre></div><div id="line11"><br/></div><div id="line12"><pre><span class="token T_INLINE_HTML">    public function notifyChannel(string $channel, string $selector, object $message) : void;</span></pre></div><div id="line13"><br/></div><div id="line14"><pre><span class="token T_INLINE_HTML">    public function notifySubscription(string $subscriptionId, string $selector, string $message, ?object $channel = null) : void;</span></pre></div><div id="line15"><br/></div><div id="line16"><pre><span class="token T_INLINE_HTML">    public function notifyUserId(string $userId, string $selector, object $message, ?string $channel = null) : void;</span></pre></div><div id="line17"><br/></div><div id="line18"><pre><span class="token T_INLINE_HTML">    public function notifyUserName(string $userName, string $selector, object $message, ?string $channel = null) : void;</span></pre></div><div id="line19"><br/></div><div id="line20"><pre><span class="token T_INLINE_HTML">    public function notifySession(string $pipid, string $selector, object $message, ?string $channel = null) : void;</span></pre></div><div id="line21"><br/></div><div id="line22"><pre><span class="token T_INLINE_HTML">    public function getSubscriptionInfo(string $id) : SubscriptionInfo;</span></pre></div><div id="line23"><br/></div><div id="line24"><pre><span class="token T_INLINE_HTML">    public function getSubscriptionInfosByUserId(string $userId) : Vector&lt;SubscriptionInfo&gt;;</span></pre></div><div id="line25"><br/></div><div id="line26"><pre><span class="token T_INLINE_HTML">    // Admin API's</span></pre></div><div id="line27"><pre><span class="token T_INLINE_HTML">    public function register(IEventSubscription $subscription, ?Map&lt;string,string&gt; $connectArgs = null);</span></pre></div><div id="line28"><br/></div><div id="line29"><pre><span class="token T_INLINE_HTML">    public function unRegister(string $subscriptionId) : void;</span></pre></div><div id="line30"><br/></div><div id="line31"><pre><span class="token T_INLINE_HTML">    public function getNextSequence(string $sequenceId);</span></pre></div><div id="line32"><br/></div><div id="line33"><pre><span class="token T_INLINE_HTML">    // Client API's</span></pre></div><div id="line34"><pre><span class="token T_INLINE_HTML">    public function getSubscriptionsDetails(?string $channel = null) : Vector&lt;Map&lt;string,string&gt;&gt;;</span></pre></div><div id="line35"><br/></div><div id="line36"><pre><span class="token T_INLINE_HTML">    public function pulse(string $subscriptionId) : bool;</span></pre></div><div id="line37"><br/></div><div id="line38"><pre><span class="token T_INLINE_HTML">    // Clear all Registrations</span></pre></div><div id="line39"><pre><span class="token T_INLINE_HTML">    public function reset() : void;</span></pre></div><div id="line40"><pre><span class="token T_INLINE_HTML">    public function start() : void;</span></pre></div><div id="line41"><pre><span class="token T_INLINE_HTML">    public function stop() : void;</span></pre></div><div id="line42"><pre><span class="token T_INLINE_HTML">}</span></pre></div><div id="line43"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2015 by Arne Blankerts</span></footer></body></html>
