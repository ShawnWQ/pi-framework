<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of ServiceController.php</title><link rel="stylesheet" type="text/css" href="../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file ServiceController.php</h1><p>
                        Size: 13,611 Bytes - Last Modified: 2015-06-28T22:23:15+00:00</p><section><h2><small>/home/gui/workspace/pi-services/src/Pi/Host/</small>ServiceController.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker" href="#line183">183</a><a class="anker" href="#line184">184</a><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a><a class="anker" href="#line187">187</a><a class="anker" href="#line188">188</a><a class="anker" href="#line189">189</a><a class="anker" href="#line190">190</a><a class="anker" href="#line191">191</a><a class="anker" href="#line192">192</a><a class="anker" href="#line193">193</a><a class="anker" href="#line194">194</a><a class="anker" href="#line195">195</a><a class="anker" href="#line196">196</a><a class="anker" href="#line197">197</a><a class="anker" href="#line198">198</a><a class="anker" href="#line199">199</a><a class="anker" href="#line200">200</a><a class="anker" href="#line201">201</a><a class="anker" href="#line202">202</a><a class="anker" href="#line203">203</a><a class="anker" href="#line204">204</a><a class="anker" href="#line205">205</a><a class="anker" href="#line206">206</a><a class="anker" href="#line207">207</a><a class="anker" href="#line208">208</a><a class="anker" href="#line209">209</a><a class="anker" href="#line210">210</a><a class="anker" href="#line211">211</a><a class="anker" href="#line212">212</a><a class="anker" href="#line213">213</a><a class="anker" href="#line214">214</a><a class="anker" href="#line215">215</a><a class="anker" href="#line216">216</a><a class="anker" href="#line217">217</a><a class="anker" href="#line218">218</a><a class="anker" href="#line219">219</a><a class="anker" href="#line220">220</a><a class="anker" href="#line221">221</a><a class="anker" href="#line222">222</a><a class="anker" href="#line223">223</a><a class="anker" href="#line224">224</a><a class="anker" href="#line225">225</a><a class="anker" href="#line226">226</a><a class="anker" href="#line227">227</a><a class="anker" href="#line228">228</a><a class="anker" href="#line229">229</a><a class="anker" href="#line230">230</a><a class="anker" href="#line231">231</a><a class="anker" href="#line232">232</a><a class="anker" href="#line233">233</a><a class="anker" href="#line234">234</a><a class="anker" href="#line235">235</a><a class="anker" href="#line236">236</a><a class="anker" href="#line237">237</a><a class="anker" href="#line238">238</a><a class="anker" href="#line239">239</a><a class="anker" href="#line240">240</a><a class="anker" href="#line241">241</a><a class="anker" href="#line242">242</a><a class="anker" href="#line243">243</a><a class="anker" href="#line244">244</a><a class="anker" href="#line245">245</a><a class="anker" href="#line246">246</a><a class="anker" href="#line247">247</a><a class="anker" href="#line248">248</a><a class="anker" href="#line249">249</a><a class="anker" href="#line250">250</a><a class="anker" href="#line251">251</a><a class="anker" href="#line252">252</a><a class="anker" href="#line253">253</a><a class="anker" href="#line254">254</a><a class="anker" href="#line255">255</a><a class="anker" href="#line256">256</a><a class="anker" href="#line257">257</a><a class="anker" href="#line258">258</a><a class="anker" href="#line259">259</a><a class="anker" href="#line260">260</a><a class="anker" href="#line261">261</a><a class="anker" href="#line262">262</a><a class="anker" href="#line263">263</a><a class="anker" href="#line264">264</a><a class="anker" href="#line265">265</a><a class="anker" href="#line266">266</a><a class="anker" href="#line267">267</a><a class="anker" href="#line268">268</a><a class="anker" href="#line269">269</a><a class="anker" href="#line270">270</a><a class="anker" href="#line271">271</a><a class="anker" href="#line272">272</a><a class="anker" href="#line273">273</a><a class="anker" href="#line274">274</a><a class="anker" href="#line275">275</a><a class="anker" href="#line276">276</a><a class="anker" href="#line277">277</a><a class="anker" href="#line278">278</a><a class="anker" href="#line279">279</a><a class="anker" href="#line280">280</a><a class="anker" href="#line281">281</a><a class="anker" href="#line282">282</a><a class="anker" href="#line283">283</a><a class="anker" href="#line284">284</a><a class="anker" href="#line285">285</a><a class="anker" href="#line286">286</a><a class="anker" href="#line287">287</a><a class="anker" href="#line288">288</a><a class="anker" href="#line289">289</a><a class="anker" href="#line290">290</a><a class="anker" href="#line291">291</a><a class="anker" href="#line292">292</a><a class="anker" href="#line293">293</a><a class="anker" href="#line294">294</a><a class="anker" href="#line295">295</a><a class="anker" href="#line296">296</a><a class="anker" href="#line297">297</a><a class="anker" href="#line298">298</a><a class="anker" href="#line299">299</a><a class="anker" href="#line300">300</a><a class="anker" href="#line301">301</a><a class="anker" href="#line302">302</a><a class="anker" href="#line303">303</a><a class="anker" href="#line304">304</a><a class="anker" href="#line305">305</a><a class="anker" href="#line306">306</a><a class="anker" href="#line307">307</a><a class="anker" href="#line308">308</a><a class="anker" href="#line309">309</a><a class="anker" href="#line310">310</a><a class="anker" href="#line311">311</a><a class="anker" href="#line312">312</a><a class="anker" href="#line313">313</a><a class="anker" href="#line314">314</a><a class="anker" href="#line315">315</a><a class="anker" href="#line316">316</a><a class="anker" href="#line317">317</a><a class="anker" href="#line318">318</a><a class="anker" href="#line319">319</a><a class="anker" href="#line320">320</a><a class="anker" href="#line321">321</a><a class="anker" href="#line322">322</a><a class="anker" href="#line323">323</a><a class="anker" href="#line324">324</a><a class="anker" href="#line325">325</a><a class="anker" href="#line326">326</a><a class="anker" href="#line327">327</a><a class="anker" href="#line328">328</a><a class="anker" href="#line329">329</a><a class="anker" href="#line330">330</a><a class="anker" href="#line331">331</a><a class="anker" href="#line332">332</a><a class="anker" href="#line333">333</a><a class="anker" href="#line334">334</a><a class="anker" href="#line335">335</a><a class="anker" href="#line336">336</a><a class="anker" href="#line337">337</a><a class="anker" href="#line338">338</a><a class="anker" href="#line339">339</a><a class="anker" href="#line340">340</a><a class="anker" href="#line341">341</a><a class="anker" href="#line342">342</a><a class="anker" href="#line343">343</a><a class="anker" href="#line344">344</a><a class="anker" href="#line345">345</a><a class="anker" href="#line346">346</a><a class="anker" href="#line347">347</a><a class="anker" href="#line348">348</a><a class="anker" href="#line349">349</a><a class="anker" href="#line350">350</a><a class="anker" href="#line351">351</a><a class="anker" href="#line352">352</a><a class="anker" href="#line353">353</a><a class="anker" href="#line354">354</a><a class="anker" href="#line355">355</a><a class="anker" href="#line356">356</a><a class="anker" href="#line357">357</a><a class="anker" href="#line358">358</a><a class="anker" href="#line359">359</a><a class="anker" href="#line360">360</a><a class="anker" href="#line361">361</a><a class="anker" href="#line362">362</a><a class="anker" href="#line363">363</a><a class="anker" href="#line364">364</a><a class="anker" href="#line365">365</a><a class="anker" href="#line366">366</a><a class="anker" href="#line367">367</a><a class="anker" href="#line368">368</a><a class="anker" href="#line369">369</a><a class="anker" href="#line370">370</a><a class="anker" href="#line371">371</a><a class="anker" href="#line372">372</a><a class="anker" href="#line373">373</a><a class="anker" href="#line374">374</a><a class="anker" href="#line375">375</a><a class="anker" href="#line376">376</a><a class="anker" href="#line377">377</a><a class="anker" href="#line378">378</a><a class="anker" href="#line379">379</a><a class="anker" href="#line380">380</a><a class="anker" href="#line381">381</a><a class="anker" href="#line382">382</a><a class="anker" href="#line383">383</a><a class="anker" href="#line384">384</a><a class="anker" href="#line385">385</a><a class="anker" href="#line386">386</a><a class="anker" href="#line387">387</a><a class="anker" href="#line388">388</a><a class="anker" href="#line389">389</a><a class="anker" href="#line390">390</a><a class="anker" href="#line391">391</a><a class="anker" href="#line392">392</a><a class="anker" href="#line393">393</a><a class="anker" href="#line394">394</a><a class="anker" href="#line395">395</a><a class="anker" href="#line396">396</a><a class="anker" href="#line397">397</a><a class="anker" href="#line398">398</a><a class="anker" href="#line399">399</a><a class="anker" href="#line400">400</a><a class="anker" href="#line401">401</a><a class="anker" href="#line402">402</a><a class="anker" href="#line403">403</a><a class="anker" href="#line404">404</a><a class="anker" href="#line405">405</a><a class="anker" href="#line406">406</a><a class="anker" href="#line407">407</a><a class="anker" href="#line408">408</a><a class="anker" href="#line409">409</a><a class="anker" href="#line410">410</a><a class="anker" href="#line411">411</a><a class="anker" href="#line412">412</a><a class="anker" href="#line413">413</a><a class="anker" href="#line414">414</a><a class="anker" href="#line415">415</a><a class="anker" href="#line416">416</a><a class="anker" href="#line417">417</a><a class="anker" href="#line418">418</a><a class="anker" href="#line419">419</a><a class="anker" href="#line420">420</a><a class="anker" href="#line421">421</a><a class="anker" href="#line422">422</a><a class="anker" href="#line423">423</a><a class="anker" href="#line424">424</a><a class="anker" href="#line425">425</a><a class="anker" href="#line426">426</a><a class="anker" href="#line427">427</a><a class="anker" href="#line428">428</a><a class="anker" href="#line429">429</a><a class="anker" href="#line430">430</a><a class="anker" href="#line431">431</a><a class="anker" href="#line432">432</a><a class="anker" href="#line433">433</a><a class="anker" href="#line434">434</a><a class="anker" href="#line435">435</a><a class="anker" href="#line436">436</a><a class="anker" href="#line437">437</a><a class="anker" href="#line438">438</a><a class="anker" href="#line439">439</a><a class="anker" href="#line440">440</a><a class="anker" href="#line441">441</a><a class="anker" href="#line442">442</a><a class="anker" href="#line443">443</a><a class="anker" href="#line444">444</a><a class="anker" href="#line445">445</a><a class="anker" href="#line446">446</a><a class="anker" href="#line447">447</a><a class="anker" href="#line448">448</a><a class="anker" href="#line449">449</a><a class="anker" href="#line450">450</a><a class="anker" href="#line451">451</a><a class="anker" href="#line452">452</a><a class="anker" href="#line453">453</a><a class="anker" href="#line454">454</a><a class="anker" href="#line455">455</a><a class="anker" href="#line456">456</a><a class="anker" href="#line457">457</a><a class="anker" href="#line458">458</a><a class="anker" href="#line459">459</a><a class="anker" href="#line460">460</a><a class="anker" href="#line461">461</a><a class="anker" href="#line462">462</a><a class="anker" href="#line463">463</a><a class="anker" href="#line464">464</a><a class="anker" href="#line465">465</a><a class="anker" href="#line466">466</a><a class="anker" href="#line467">467</a><a class="anker" href="#line468">468</a><a class="anker" href="#line469">469</a><a class="anker" href="#line470">470</a><a class="anker" href="#line471">471</a><a class="anker" href="#line472">472</a><a class="anker" href="#line473">473</a><a class="anker" href="#line474">474</a><a class="anker" href="#line475">475</a><a class="anker" href="#line476">476</a><a class="anker" href="#line477">477</a><a class="anker" href="#line478">478</a><a class="anker" href="#line479">479</a><a class="anker" href="#line480">480</a><a class="anker" href="#line481">481</a><a class="anker" href="#line482">482</a><a class="anker" href="#line483">483</a><a class="anker" href="#line484">484</a><a class="anker" href="#line485">485</a><a class="anker" href="#line486">486</a><a class="anker" href="#line487">487</a><a class="anker" href="#line488">488</a><a class="anker" href="#line489">489</a><a class="anker" href="#line490">490</a><a class="anker" href="#line491">491</a><a class="anker" href="#line492">492</a><a class="anker" href="#line493">493</a><a class="anker" href="#line494">494</a><a class="anker" href="#line495">495</a><a class="anker" href="#line496">496</a><a class="anker" href="#line497">497</a><a class="anker" href="#line498">498</a><a class="anker" href="#line499">499</a><a class="anker" href="#line500">500</a><a class="anker" href="#line501">501</a><a class="anker" href="#line502">502</a><a class="anker" href="#line503">503</a><a class="anker" href="#line504">504</a><a class="anker" href="#line505">505</a><a class="anker" href="#line506">506</a><a class="anker" href="#line507">507</a></td><td class="line"><div id="line1"><pre><span class="token T_INLINE_HTML">&lt;?hh</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_INLINE_HTML">namespace Pi\Host;</span></pre></div><div id="line4"><br/></div><div id="line5"><pre><span class="token T_INLINE_HTML">use Pi\FileSystem\FileGet;</span></pre></div><div id="line6"><pre><span class="token T_INLINE_HTML">use Pi\NotImplementedException;</span></pre></div><div id="line7"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IRoutesManager;</span></pre></div><div id="line8"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IRequest;</span></pre></div><div id="line9"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IService;</span></pre></div><div id="line10"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IMessage;</span></pre></div><div id="line11"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\ILog;</span></pre></div><div id="line12"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IPiHost;</span></pre></div><div id="line13"><pre><span class="token T_INLINE_HTML">use Pi\Host\RoutesManager;</span></pre></div><div id="line14"><pre><span class="token T_INLINE_HTML">use Pi\Host\BasicRequest;</span></pre></div><div id="line15"><pre><span class="token T_INLINE_HTML">use Pi\Route;</span></pre></div><div id="line16"><pre><span class="token T_INLINE_HTML">use Pi\Service;</span></pre></div><div id="line17"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IServiceBase;</span></pre></div><div id="line18"><pre><span class="token T_INLINE_HTML">use Pi\Host\ServiceMeta;</span></pre></div><div id="line19"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IHasFactory;</span></pre></div><div id="line20"><pre><span class="token T_INLINE_HTML">use Pi\Logging\LogMannager;</span></pre></div><div id="line21"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IRequiresRequest;</span></pre></div><div id="line22"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IMessageFactory;</span></pre></div><div id="line23"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IReturn;</span></pre></div><div id="line24"><pre><span class="token T_INLINE_HTML">use Pi\ServiceModel\NotFoundRequest;</span></pre></div><div id="line25"><pre><span class="token T_INLINE_HTML">use Pi\ServiceInterface\NotFoundService;</span></pre></div><div id="line26"><pre><span class="token T_INLINE_HTML">use Pi\Host\Handlers\RestHandler;</span></pre></div><div id="line27"><pre><span class="token T_INLINE_HTML">use Pi\Host\Handlers\HandlerAttribute;</span></pre></div><div id="line28"><pre><span class="token T_INLINE_HTML">use Pi\Host\Handlers\NotFoundHandler;</span></pre></div><div id="line29"><pre><span class="token T_INLINE_HTML">use Pi\Host\Handlers\AbstractPiHandler;</span></pre></div><div id="line30"><pre><span class="token T_INLINE_HTML">use Pi\Host\Handlers\FileSystemHandler;</span></pre></div><div id="line31"><pre><span class="token T_INLINE_HTML">use SuperClosure\Serializer;</span></pre></div><div id="line32"><pre><span class="token T_INLINE_HTML">use SuperClosure\Analyzer\AstAnalyzer;</span></pre></div><div id="line33"><pre><span class="token T_INLINE_HTML">use SuperClosure\Exception\ClosureAnalysisException;</span></pre></div><div id="line34"><br/></div><div id="line35"><pre><span class="token T_INLINE_HTML">/**</span></pre></div><div id="line36"><pre><span class="token T_INLINE_HTML"> * The Service Controler is responsible for executing services</span></pre></div><div id="line37"><pre><span class="token T_INLINE_HTML"> * Services are registered in IOC container</span></pre></div><div id="line38"><pre><span class="token T_INLINE_HTML"> */</span></pre></div><div id="line39"><br/></div><div id="line40"><pre><span class="token T_INLINE_HTML">class ServiceController</span></pre></div><div id="line41"><pre><span class="token T_INLINE_HTML">{</span></pre></div><div id="line42"><br/></div><div id="line43"><br/></div><div id="line44"><pre><span class="token T_INLINE_HTML">  protected $reflRequests = Map{};</span></pre></div><div id="line45"><br/></div><div id="line46"><pre><span class="token T_INLINE_HTML">  protected $reflServices = Map{};</span></pre></div><div id="line47"><br/></div><div id="line48"><pre><span class="token T_INLINE_HTML">    /**</span></pre></div><div id="line49"><pre><span class="token T_INLINE_HTML">   * @var Map</span></pre></div><div id="line50"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line51"><pre><span class="token T_INLINE_HTML">  protected $servicesExecutors = Map&lt;TRequest, TServiceExecuteFn&gt; {};</span></pre></div><div id="line52"><pre><span class="token T_INLINE_HTML">    /**</span></pre></div><div id="line53"><pre><span class="token T_INLINE_HTML">   * @var ILog</span></pre></div><div id="line54"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line55"><pre><span class="token T_INLINE_HTML">  private $log;</span></pre></div><div id="line56"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line57"><pre><span class="token T_INLINE_HTML">   *  A dictionary like for &lt;RequestType, ServiceType&gt;</span></pre></div><div id="line58"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line59"><pre><span class="token T_INLINE_HTML">  protected $services;</span></pre></div><div id="line60"><br/></div><div id="line61"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line62"><pre><span class="token T_INLINE_HTML">   * @var IMessageFactory</span></pre></div><div id="line63"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line64"><pre><span class="token T_INLINE_HTML">  protected $messageFactory;</span></pre></div><div id="line65"><br/></div><div id="line66"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line67"><pre><span class="token T_INLINE_HTML">   * @var IPiHost</span></pre></div><div id="line68"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line69"><pre><span class="token T_INLINE_HTML">  protected $appHost;</span></pre></div><div id="line70"><br/></div><div id="line71"><pre><span class="token T_INLINE_HTML">  protected $servicesR;</span></pre></div><div id="line72"><br/></div><div id="line73"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line74"><pre><span class="token T_INLINE_HTML">   *&lt;RequestType, HandlerFn&gt;</span></pre></div><div id="line75"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line76"><pre><span class="token T_INLINE_HTML">  protected $serviceMapper;</span></pre></div><div id="line77"><br/></div><div id="line78"><pre><span class="token T_INLINE_HTML">  protected $servicesMeta = Map{};</span></pre></div><div id="line79"><br/></div><div id="line80"><pre><span class="token T_INLINE_HTML">  public function __construct(&amp;$appHost)</span></pre></div><div id="line81"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line82"><br/></div><div id="line83"><pre><span class="token T_INLINE_HTML">      $this-&gt;appHost = $appHost;</span></pre></div><div id="line84"><pre><span class="token T_INLINE_HTML">      $this-&gt;services = Map{};</span></pre></div><div id="line85"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line86"><br/></div><div id="line87"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line88"><pre><span class="token T_INLINE_HTML">   * Initialialize the ServiceController</span></pre></div><div id="line89"><pre><span class="token T_INLINE_HTML">   * At this point the Applicaion has already registered all services</span></pre></div><div id="line90"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line91"><pre><span class="token T_INLINE_HTML">  public function init()</span></pre></div><div id="line92"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line93"><pre><span class="token T_INLINE_HTML">    </span></pre></div><div id="line94"><pre><span class="token T_INLINE_HTML">    $this-&gt;messageFactory = $this-&gt;appHost-&gt;resolve('IMessageFactory');</span></pre></div><div id="line95"><pre><span class="token T_INLINE_HTML">    if(is_null($this-&gt;messageFactory)){</span></pre></div><div id="line96"><pre><span class="token T_INLINE_HTML">      throw new \Exception('A Message Factory should be registered before ServiceController init is called');</span></pre></div><div id="line97"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line98"><pre><span class="token T_INLINE_HTML">    $this-&gt;log = LogMannager::getLogger(get_class($this));</span></pre></div><div id="line99"><pre><span class="token T_INLINE_HTML">    $this-&gt;appHost-&gt;log()-&gt;debug(</span></pre></div><div id="line100"><pre><span class="token T_INLINE_HTML">      sprintf('Initialiazing ServiceController for PiHost %s', $this-&gt;appHost-&gt;getName())</span></pre></div><div id="line101"><pre><span class="token T_INLINE_HTML">    );</span></pre></div><div id="line102"><br/></div><div id="line103"><br/></div><div id="line104"><pre><span class="token T_INLINE_HTML">    // appHost.container.registerAutoWired from appHost.Metadata.ServiceTypes</span></pre></div><div id="line105"><br/></div><div id="line106"><pre><span class="token T_INLINE_HTML">    // register services from cache</span></pre></div><div id="line107"><pre><span class="token T_INLINE_HTML">    $provider = $this-&gt;appHost-&gt;cacheProvider();</span></pre></div><div id="line108"><pre><span class="token T_INLINE_HTML">    if(is_null($provider)){</span></pre></div><div id="line109"><pre><span class="token T_INLINE_HTML">      throw new \Exception(</span></pre></div><div id="line110"><pre><span class="token T_INLINE_HTML">        sprintf('The host hasnt any cache provider configured. ServiceController requires cacheProvider to be set a init method')</span></pre></div><div id="line111"><pre><span class="token T_INLINE_HTML">      );</span></pre></div><div id="line112"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line113"><pre><span class="token T_INLINE_HTML">    $this-&gt;loadFromCache();</span></pre></div><div id="line114"><pre><span class="token T_INLINE_HTML">    $this-&gt;registerService(new NotFoundService());</span></pre></div><div id="line115"><pre><span class="token T_INLINE_HTML">    $this-&gt;doRegisterServices();</span></pre></div><div id="line116"><pre><span class="token T_INLINE_HTML">    </span></pre></div><div id="line117"><pre><span class="token T_INLINE_HTML">    if(!$this-&gt;cacheNotPersisted)</span></pre></div><div id="line118"><pre><span class="token T_INLINE_HTML">    {</span></pre></div><div id="line119"><pre><span class="token T_INLINE_HTML">      /*$h = $this-&gt;appHost;</span></pre></div><div id="line120"><pre><span class="token T_INLINE_HTML">      $r = $this-&gt;appHost-&gt;routes()-&gt;routes();</span></pre></div><div id="line121"><pre><span class="token T_INLINE_HTML">      $e = $this-&gt;servicesExecutors;</span></pre></div><div id="line122"><pre><span class="token T_INLINE_HTML">      $s = $this-&gt;servicesR;</span></pre></div><div id="line123"><pre><span class="token T_INLINE_HTML">      $m = $this-&gt;servicesMeta;</span></pre></div><div id="line124"><pre><span class="token T_INLINE_HTML">      $serialized = array(</span></pre></div><div id="line125"><pre><span class="token T_INLINE_HTML">        'r' =&gt; $r,</span></pre></div><div id="line126"><pre><span class="token T_INLINE_HTML">        'm' =&gt; $m,</span></pre></div><div id="line127"><pre><span class="token T_INLINE_HTML">          'e' =&gt; $e,</span></pre></div><div id="line128"><pre><span class="token T_INLINE_HTML">          's' =&gt; $s</span></pre></div><div id="line129"><pre><span class="token T_INLINE_HTML">      );</span></pre></div><div id="line130"><br/></div><div id="line131"><pre><span class="token T_INLINE_HTML">    $sr = serialize($serialized);</span></pre></div><div id="line132"><pre><span class="token T_INLINE_HTML">      $provider-&gt;set('AppHost::Routes', $sr);</span></pre></div><div id="line133"><pre><span class="token T_INLINE_HTML">*/    }</span></pre></div><div id="line134"><br/></div><div id="line135"><pre><span class="token T_INLINE_HTML">    $this-&gt;appHost-&gt;log()-&gt;debug('Loading ServiceController routes from cache provider');</span></pre></div><div id="line136"><br/></div><div id="line137"><pre><span class="token T_INLINE_HTML">    return $this;</span></pre></div><div id="line138"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line139"><br/></div><div id="line140"><pre><span class="token T_INLINE_HTML">  public function build()</span></pre></div><div id="line141"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line142"><pre><span class="token T_INLINE_HTML">     $this-&gt;doRegisterServices();</span></pre></div><div id="line143"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line144"><br/></div><div id="line145"><pre><span class="token T_INLINE_HTML">  public function registerCache(array $routes, array $services)</span></pre></div><div id="line146"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line147"><br/></div><div id="line148"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line149"><br/></div><div id="line150"><pre><span class="token T_INLINE_HTML">  public function loadCache(array $data)</span></pre></div><div id="line151"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line152"><br/></div><div id="line153"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line154"><br/></div><div id="line155"><pre><span class="token T_INLINE_HTML">  protected $cacheNotPersisted = false;</span></pre></div><div id="line156"><br/></div><div id="line157"><pre><span class="token T_INLINE_HTML">  private function loadFromCache()</span></pre></div><div id="line158"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line159"><br/></div><div id="line160"><pre><span class="token T_INLINE_HTML">    $data = $this-&gt;appHost-&gt;cacheProvider()-&gt;get('AppHost::Routes');</span></pre></div><div id="line161"><br/></div><div id="line162"><pre><span class="token T_INLINE_HTML">    /*if(!is_null($data)){</span></pre></div><div id="line163"><pre><span class="token T_INLINE_HTML">      $arr = unserialize($data);</span></pre></div><div id="line164"><pre><span class="token T_INLINE_HTML">        //$this-&gt;appHost-&gt;routes()-&gt;setRoutes($arr['r']);</span></pre></div><div id="line165"><pre><span class="token T_INLINE_HTML">        $this-&gt;servicesExecutors = $arr['e'];</span></pre></div><div id="line166"><pre><span class="token T_INLINE_HTML">        $this-&gt;servicesR = $arr['s'];</span></pre></div><div id="line167"><pre><span class="token T_INLINE_HTML">        $this-&gt;servicesMeta = $arr['m'];</span></pre></div><div id="line168"><pre><span class="token T_INLINE_HTML">      //$this-&gt;cacheNotPersisted = true;</span></pre></div><div id="line169"><br/></div><div id="line170"><pre><span class="token T_INLINE_HTML">    }*/</span></pre></div><div id="line171"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line172"><br/></div><div id="line173"><pre><span class="token T_INLINE_HTML">  public function servicesMap()</span></pre></div><div id="line174"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line175"><pre><span class="token T_INLINE_HTML">    return $this-&gt;servicesR;</span></pre></div><div id="line176"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line177"><br/></div><div id="line178"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line179"><pre><span class="token T_INLINE_HTML">   * Register the service meta data information to construct webservices</span></pre></div><div id="line180"><pre><span class="token T_INLINE_HTML">   * @param string $serviceType The service class with namespace</span></pre></div><div id="line181"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line182"><pre><span class="token T_INLINE_HTML">  private function registerServiceMeta(string $serviceType, $requestType, $methodName, $applyTo = null, $version = '0.0.1')</span></pre></div><div id="line183"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line184"><pre><span class="token T_INLINE_HTML">    if(!array_key_exists($serviceType, $this-&gt;servicesMeta))</span></pre></div><div id="line185"><pre><span class="token T_INLINE_HTML">    {</span></pre></div><div id="line186"><pre><span class="token T_INLINE_HTML">      $this-&gt;servicesMeta[$serviceType] = new ServiceMeta($serviceType);</span></pre></div><div id="line187"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line188"><pre><span class="token T_INLINE_HTML">     $this-&gt;servicesMeta[$serviceType]-&gt;add($requestType, $methodName, $this-&gt;reflRequests[$requestType]-&gt;getAttributes(), $applyTo , $version = '0.0.1');</span></pre></div><div id="line189"><br/></div><div id="line190"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line191"><br/></div><div id="line192"><pre><span class="token T_INLINE_HTML">  public function getRestPathForRequest($httpMethod, $pathInfo) : string</span></pre></div><div id="line193"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line194"><br/></div><div id="line195"><pre><span class="token T_INLINE_HTML">    return $this-&gt;routes()-&gt;get($pathInfo, $httpMethod);</span></pre></div><div id="line196"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line197"><br/></div><div id="line198"><pre><span class="token T_INLINE_HTML">  public function servicesMeta()</span></pre></div><div id="line199"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line200"><pre><span class="token T_INLINE_HTML">    return $this-&gt;servicesMeta;</span></pre></div><div id="line201"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line202"><br/></div><div id="line203"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line204"><pre><span class="token T_INLINE_HTML">   * Register a Service</span></pre></div><div id="line205"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line206"><pre><span class="token T_INLINE_HTML">  public function registerService(IService $instance)</span></pre></div><div id="line207"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line208"><pre><span class="token T_INLINE_HTML">    if(!$instance instanceof Service) {</span></pre></div><div id="line209"><pre><span class="token T_INLINE_HTML">      return false;</span></pre></div><div id="line210"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line211"><pre><span class="token T_INLINE_HTML">    $serviceType = get_class($instance);</span></pre></div><div id="line212"><pre><span class="token T_INLINE_HTML">    if(isset($this-&gt;servicesR[$serviceType])) return;</span></pre></div><div id="line213"><br/></div><div id="line214"><pre><span class="token T_INLINE_HTML">    $this-&gt;servicesR[$serviceType] = $instance;</span></pre></div><div id="line215"><pre><span class="token T_INLINE_HTML">    $this-&gt;appHost-&gt;container-&gt;registerInstance($instance);</span></pre></div><div id="line216"><br/></div><div id="line217"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line218"><br/></div><div id="line219"><pre><span class="token T_INLINE_HTML">  private function doRegisterServices()</span></pre></div><div id="line220"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line221"><br/></div><div id="line222"><pre><span class="token T_INLINE_HTML">    foreach($this-&gt;servicesR as $serviceType =&gt; $instance){</span></pre></div><div id="line223"><br/></div><div id="line224"><pre><span class="token T_INLINE_HTML">      if(!$instance instanceof IService) {</span></pre></div><div id="line225"><pre><span class="token T_INLINE_HTML">        continue;</span></pre></div><div id="line226"><pre><span class="token T_INLINE_HTML">      }</span></pre></div><div id="line227"><br/></div><div id="line228"><pre><span class="token T_INLINE_HTML">      $factory = $instance-&gt;createInstance();</span></pre></div><div id="line229"><pre><span class="token T_INLINE_HTML">      $rc = new \ReflectionClass($serviceType);</span></pre></div><div id="line230"><pre><span class="token T_INLINE_HTML">      $this-&gt;reflServices[$serviceType] = $rc;</span></pre></div><div id="line231"><br/></div><div id="line232"><pre><span class="token T_INLINE_HTML">      $methods = $rc-&gt;getMethods();</span></pre></div><div id="line233"><br/></div><div id="line234"><pre><span class="token T_INLINE_HTML">      foreach($methods as $method)</span></pre></div><div id="line235"><pre><span class="token T_INLINE_HTML">      {</span></pre></div><div id="line236"><pre><span class="token T_INLINE_HTML">        $attrs = $method-&gt;getAttributes();</span></pre></div><div id="line237"><pre><span class="token T_INLINE_HTML">        $name = $method-&gt;name;</span></pre></div><div id="line238"><pre><span class="token T_INLINE_HTML">        $params = $rc-&gt;getMethod($name)-&gt;getParameters();</span></pre></div><div id="line239"><br/></div><div id="line240"><pre><span class="token T_INLINE_HTML">        if(!is_array($params) || count($params) == 0 || is_null($params[0]-&gt;getClass()))</span></pre></div><div id="line241"><pre><span class="token T_INLINE_HTML">          continue;</span></pre></div><div id="line242"><pre><span class="token T_INLINE_HTML">        // if not a action service, return</span></pre></div><div id="line243"><pre><span class="token T_INLINE_HTML">      </span></pre></div><div id="line244"><pre><span class="token T_INLINE_HTML">        $requestType = $params[0]-&gt;getClass()-&gt;getName();</span></pre></div><div id="line245"><pre><span class="token T_INLINE_HTML">        $this-&gt;reflRequests[$requestType] = $method;</span></pre></div><div id="line246"><pre><span class="token T_INLINE_HTML">        // BUG: aditional interfaces are being registered. filter IService methods only (with Request at firstParamter or having Request attribute)</span></pre></div><div id="line247"><br/></div><div id="line248"><pre><span class="token T_INLINE_HTML">        if(array_key_exists('Request', $attrs) || array_key_exists('Subscriber', $attrs)) {</span></pre></div><div id="line249"><pre><span class="token T_INLINE_HTML">          $this-&gt;mapRestFromMethod($serviceType, $requestType, $instance, $rc, $method);</span></pre></div><div id="line250"><pre><span class="token T_INLINE_HTML">          $this-&gt;registerServiceInstance($requestType, $serviceType, $name, $instance);</span></pre></div><div id="line251"><pre><span class="token T_INLINE_HTML">        }</span></pre></div><div id="line252"><pre><span class="token T_INLINE_HTML">        if(array_key_exists('Subscriber', $attrs) &amp;&amp; is_array($attrs['Subscriber']) &amp;&amp; isset($attrs['Subscriber'][0])) {</span></pre></div><div id="line253"><pre><span class="token T_INLINE_HTML">          $this-&gt;appHost-&gt;registerSubscriber($attrs['Subscriber'][0], $requestType);</span></pre></div><div id="line254"><pre><span class="token T_INLINE_HTML">        }</span></pre></div><div id="line255"><pre><span class="token T_INLINE_HTML">/*</span></pre></div><div id="line256"><pre><span class="token T_INLINE_HTML"> else {</span></pre></div><div id="line257"><pre><span class="token T_INLINE_HTML">          $this-&gt;mapRestFromDto($serviceType, $requestType, $instance, $rc, $method);</span></pre></div><div id="line258"><pre><span class="token T_INLINE_HTML">        }*/</span></pre></div><div id="line259"><pre><span class="token T_INLINE_HTML">        </span></pre></div><div id="line260"><pre><span class="token T_INLINE_HTML">        </span></pre></div><div id="line261"><pre><span class="token T_INLINE_HTML">      }</span></pre></div><div id="line262"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line263"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line264"><br/></div><div id="line265"><pre><span class="token T_INLINE_HTML">  protected function registerServiceInstance($requestType, $serviceType, $name, $instance)</span></pre></div><div id="line266"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line267"><pre><span class="token T_INLINE_HTML">    $this-&gt;addRequestToMap($requestType, $serviceType, $name);</span></pre></div><div id="line268"><pre><span class="token T_INLINE_HTML">    $this-&gt;registerServiceMeta($serviceType, $requestType, $name);</span></pre></div><div id="line269"><pre><span class="token T_INLINE_HTML">    $this-&gt;registerServiceExecutor($requestType, $serviceType, $name, $instance);</span></pre></div><div id="line270"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line271"><br/></div><div id="line272"><pre><span class="token T_INLINE_HTML">  public function getReflRequest(string $requestType)</span></pre></div><div id="line273"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line274"><pre><span class="token T_INLINE_HTML">    return $this-&gt;reflRequests[$requestType];</span></pre></div><div id="line275"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line276"><br/></div><div id="line277"><pre><span class="token T_INLINE_HTML">  /*</span></pre></div><div id="line278"><pre><span class="token T_INLINE_HTML">   * Route is defined at class</span></pre></div><div id="line279"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line280"><pre><span class="token T_INLINE_HTML">  private function mapRestFromDto(string $serviceType, string $requestType, $instance, \ReflectionClass $rc, \ReflectionMethod $method)</span></pre></div><div id="line281"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line282"><pre><span class="token T_INLINE_HTML">    $rc = new \ReflectionClass($requestType);</span></pre></div><div id="line283"><pre><span class="token T_INLINE_HTML">    $attrs = $rc-&gt;getAttributes();</span></pre></div><div id="line284"><br/></div><div id="line285"><pre><span class="token T_INLINE_HTML">    if(is_array($attrs) &amp;&amp; array_key_exists('Route', $attrs)) {</span></pre></div><div id="line286"><br/></div><div id="line287"><pre><span class="token T_INLINE_HTML">      $this-&gt;registerRestPath($serviceType, $requestType, $attrs['Route']);</span></pre></div><div id="line288"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line289"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line290"><br/></div><div id="line291"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line292"><pre><span class="token T_INLINE_HTML">   * Request methods identified by Request attribute</span></pre></div><div id="line293"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line294"><pre><span class="token T_INLINE_HTML">  private function mapRestFromMethod(string $serviceType, string $requestType, $instance, \ReflectionClass $rc, \ReflectionMethod $method)</span></pre></div><div id="line295"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line296"><pre><span class="token T_INLINE_HTML">    $name = $method-&gt;name;</span></pre></div><div id="line297"><pre><span class="token T_INLINE_HTML">    $attrs = $method-&gt;getAttributes();</span></pre></div><div id="line298"><pre><span class="token T_INLINE_HTML">    $verbs = array('GET');</span></pre></div><div id="line299"><pre><span class="token T_INLINE_HTML">    </span></pre></div><div id="line300"><pre><span class="token T_INLINE_HTML">    if(array_key_exists('Method', $attrs)){</span></pre></div><div id="line301"><pre><span class="token T_INLINE_HTML">      $v = $rc-&gt;getMethod($name)-&gt;getAttribute('Method')[0];</span></pre></div><div id="line302"><pre><span class="token T_INLINE_HTML">      $verbs = is_array($v) ? $v : array($v);</span></pre></div><div id="line303"><pre><span class="token T_INLINE_HTML">    } else if(in_array(strtolower($name), array('get', 'post', 'put', 'delete'))){</span></pre></div><div id="line304"><pre><span class="token T_INLINE_HTML">      $verbs = array(strtoupper($name));</span></pre></div><div id="line305"><br/></div><div id="line306"><pre><span class="token T_INLINE_HTML">    } else {</span></pre></div><div id="line307"><br/></div><div id="line308"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line309"><br/></div><div id="line310"><pre><span class="token T_INLINE_HTML">    $restPath = '';</span></pre></div><div id="line311"><pre><span class="token T_INLINE_HTML">    if(array_key_exists('Route', $attrs)){</span></pre></div><div id="line312"><pre><span class="token T_INLINE_HTML">      $restPath = $rc-&gt;getMethod($name)-&gt;getAttribute('Route')[0];</span></pre></div><div id="line313"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line314"><pre><span class="token T_INLINE_HTML">    $this-&gt;registerRestPath($serviceType, $requestType, $restPath, $verbs);</span></pre></div><div id="line315"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line316"><br/></div><div id="line317"><br/></div><div id="line318"><pre><span class="token T_INLINE_HTML">  public function getReflServiceByRequestType($requestType)</span></pre></div><div id="line319"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line320"><br/></div><div id="line321"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line322"><br/></div><div id="line323"><pre><span class="token T_INLINE_HTML">  public function getReflServices()</span></pre></div><div id="line324"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line325"><pre><span class="token T_INLINE_HTML">    return $this-&gt;reflServices;</span></pre></div><div id="line326"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line327"><br/></div><div id="line328"><pre><span class="token T_INLINE_HTML">  public function routes()</span></pre></div><div id="line329"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line330"><pre><span class="token T_INLINE_HTML">    return $this-&gt;appHost-&gt;routes();</span></pre></div><div id="line331"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line332"><br/></div><div id="line333"><pre><span class="token T_INLINE_HTML">  public function registerRestPath(string $serviceType, string $requestType, string $restPath, ?array $verbs = null)</span></pre></div><div id="line334"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line335"><pre><span class="token T_INLINE_HTML">    </span></pre></div><div id="line336"><pre><span class="token T_INLINE_HTML">    if(is_null($verbs)){</span></pre></div><div id="line337"><br/></div><div id="line338"><pre><span class="token T_INLINE_HTML">      $verbs = array('GET');</span></pre></div><div id="line339"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line340"><pre><span class="token T_INLINE_HTML">     $this-&gt;routes()-&gt;add($restPath, $serviceType, $requestType, $verbs);</span></pre></div><div id="line341"><pre><span class="token T_INLINE_HTML">     $this-&gt;appHost-&gt;debug(</span></pre></div><div id="line342"><pre><span class="token T_INLINE_HTML">        sprintf('Registering the rest path: %s for request type %s', $restPath, $requestType)</span></pre></div><div id="line343"><pre><span class="token T_INLINE_HTML">    );</span></pre></div><div id="line344"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line345"><br/></div><div id="line346"><pre><span class="token T_INLINE_HTML">  public function registerServiceExecutor(string $requestType, string $serviceType, $method, IHasFactory $factory )</span></pre></div><div id="line347"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line348"><br/></div><div id="line349"><pre><span class="token T_INLINE_HTML">    /*</span></pre></div><div id="line350"><pre><span class="token T_INLINE_HTML">     * The service executor handler binds context and dto</span></pre></div><div id="line351"><pre><span class="token T_INLINE_HTML">     * There's always created a new instance. shouldnt be singleton each service as requests/dtos, etc are by reference?</span></pre></div><div id="line352"><pre><span class="token T_INLINE_HTML">     */</span></pre></div><div id="line353"><pre><span class="token T_INLINE_HTML">     $reflService = $this-&gt;reflServices[$serviceType];</span></pre></div><div id="line354"><pre><span class="token T_INLINE_HTML">    $this-&gt;servicesExecutors[$requestType] = $this-&gt;protect(function(IRequest $context) use($factory, $reflService, $method) {</span></pre></div><div id="line355"><br/></div><div id="line356"><pre><span class="token T_INLINE_HTML">      $service = $factory-&gt;createInstance();</span></pre></div><div id="line357"><pre><span class="token T_INLINE_HTML">      $service-&gt;setRequest($context);</span></pre></div><div id="line358"><br/></div><div id="line359"><pre><span class="token T_INLINE_HTML">      $service-&gt;setResolver(HostProvider::instance()-&gt;container());</span></pre></div><div id="line360"><br/></div><div id="line361"><pre><span class="token T_INLINE_HTML">      HostProvider::instance()-&gt;container()-&gt;autoWireService($service);</span></pre></div><div id="line362"><pre><span class="token T_INLINE_HTML">/*</span></pre></div><div id="line363"><br/></div><div id="line364"><pre><span class="token T_INLINE_HTML">      foreach($reflService-&gt;getMethods() as $method){</span></pre></div><div id="line365"><pre><span class="token T_INLINE_HTML">        if($method-&gt;getAttribute('Dependency')!== null){</span></pre></div><div id="line366"><br/></div><div id="line367"><pre><span class="token T_INLINE_HTML">          $dependency = HostProvider::instance()-&gt;container()-&gt;get($method-&gt;getAttribute('Dependency')[0]);</span></pre></div><div id="line368"><pre><span class="token T_INLINE_HTML">          $n = $method-&gt;name;</span></pre></div><div id="line369"><pre><span class="token T_INLINE_HTML">          $service-&gt;$n($dependency);</span></pre></div><div id="line370"><pre><span class="token T_INLINE_HTML">        }</span></pre></div><div id="line371"><pre><span class="token T_INLINE_HTML">      }*/</span></pre></div><div id="line372"><pre><span class="token T_INLINE_HTML">      $r = call_user_func(array($service, $method), $context-&gt;dto());</span></pre></div><div id="line373"><br/></div><div id="line374"><pre><span class="token T_INLINE_HTML">      return $r;</span></pre></div><div id="line375"><pre><span class="token T_INLINE_HTML">    });</span></pre></div><div id="line376"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line377"><pre><span class="token T_INLINE_HTML">  public function protect(\Closure $callable)</span></pre></div><div id="line378"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line379"><pre><span class="token T_INLINE_HTML">      return function () use ($callable) {</span></pre></div><div id="line380"><pre><span class="token T_INLINE_HTML">          return $callable;</span></pre></div><div id="line381"><pre><span class="token T_INLINE_HTML">      };</span></pre></div><div id="line382"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line383"><pre><span class="token T_INLINE_HTML">  public function addExecutorToMap(string $requestType, string $serviceType, $method, $handler)</span></pre></div><div id="line384"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line385"><pre><span class="token T_INLINE_HTML">    //$this-&gt;servicesExecutors[$requestType] = $this-&gt;protect($handler);</span></pre></div><div id="line386"><pre><span class="token T_INLINE_HTML">    //ServiceExecutor::createExecutionFn($requestType, $serviceType, $method, $handler)</span></pre></div><div id="line387"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line388"><br/></div><div id="line389"><pre><span class="token T_INLINE_HTML">  public function getService($requestType) : ?ServiceExecuteFn</span></pre></div><div id="line390"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line391"><pre><span class="token T_INLINE_HTML">    return $this-&gt;servicesExecutors[$requestType];</span></pre></div><div id="line392"><br/></div><div id="line393"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line394"><br/></div><div id="line395"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line396"><pre><span class="token T_INLINE_HTML">   * methods names, temp solution</span></pre></div><div id="line397"><pre><span class="token T_INLINE_HTML">   * @var [type]</span></pre></div><div id="line398"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line399"><pre><span class="token T_INLINE_HTML">  protected $requests = Set{};</span></pre></div><div id="line400"><br/></div><div id="line401"><pre><span class="token T_INLINE_HTML">  protected $operations = Map{};</span></pre></div><div id="line402"><br/></div><div id="line403"><pre><span class="token T_INLINE_HTML">  public function getRequestTypeByOperation($operationName)</span></pre></div><div id="line404"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line405"><pre><span class="token T_INLINE_HTML">    return $this-&gt;operations[$operationName];</span></pre></div><div id="line406"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line407"><br/></div><div id="line408"><pre><span class="token T_INLINE_HTML">  public function addRequestToMap(string $requestType, string $serviceType, $methodName)</span></pre></div><div id="line409"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line410"><pre><span class="token T_INLINE_HTML">    $operationName = $requestType;</span></pre></div><div id="line411"><pre><span class="token T_INLINE_HTML">    $this-&gt;services[$requestType] = $serviceType;</span></pre></div><div id="line412"><pre><span class="token T_INLINE_HTML">    $this-&gt;operations[$operationName] = $requestType;</span></pre></div><div id="line413"><pre><span class="token T_INLINE_HTML">    $this-&gt;appHost-&gt;log()-&gt;debug(</span></pre></div><div id="line414"><pre><span class="token T_INLINE_HTML">     sprintf('Registering request type %s for service type %s \n\r', $requestType, $serviceType)</span></pre></div><div id="line415"><pre><span class="token T_INLINE_HTML">   );</span></pre></div><div id="line416"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line417"><br/></div><div id="line418"><pre><span class="token T_INLINE_HTML">  public function executeMessage(IMessage $mqMessage)</span></pre></div><div id="line419"><pre><span class="token T_INLINE_HTML">	{</span></pre></div><div id="line420"><br/></div><div id="line421"><pre><span class="token T_INLINE_HTML">	}</span></pre></div><div id="line422"><br/></div><div id="line423"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line424"><pre><span class="token T_INLINE_HTML">   *</span></pre></div><div id="line425"><pre><span class="token T_INLINE_HTML">   * @throws Pi\Validation\ValidationException</span></pre></div><div id="line426"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line427"><pre><span class="token T_INLINE_HTML">  public function execute($requestDto, IRequest $request)</span></pre></div><div id="line428"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line429"><br/></div><div id="line430"><pre><span class="token T_INLINE_HTML">    $requestType = get_class($requestDto);</span></pre></div><div id="line431"><pre><span class="token T_INLINE_HTML">    </span></pre></div><div id="line432"><pre><span class="token T_INLINE_HTML">    if(!isset($this-&gt;servicesExecutors[$requestType])) {</span></pre></div><div id="line433"><pre><span class="token T_INLINE_HTML">      throw new \Exception('The request ' . get_class($requestDto) . ' isnt\'t mapped properly to any service.');</span></pre></div><div id="line434"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line435"><pre><span class="token T_INLINE_HTML">    $instance = $this-&gt;servicesExecutors[$requestType];</span></pre></div><div id="line436"><br/></div><div id="line437"><pre><span class="token T_INLINE_HTML">    $serviceType = $this-&gt;services[$requestType];</span></pre></div><div id="line438"><br/></div><div id="line439"><pre><span class="token T_INLINE_HTML">    $method = $this-&gt;servicesMeta[$serviceType]-&gt;map()[$requestType]['any']-&gt;methodName();</span></pre></div><div id="line440"><pre><span class="token T_INLINE_HTML">    </span></pre></div><div id="line441"><pre><span class="token T_INLINE_HTML">    $context = new \Pi\Host\ActionContext();</span></pre></div><div id="line442"><pre><span class="token T_INLINE_HTML">    $context-&gt;setRequestType($requestType);</span></pre></div><div id="line443"><pre><span class="token T_INLINE_HTML">    $context-&gt;setServiceType($serviceType);</span></pre></div><div id="line444"><br/></div><div id="line445"><pre><span class="token T_INLINE_HTML">    $context-&gt;setServiceAction($instance);</span></pre></div><div id="line446"><pre><span class="token T_INLINE_HTML">    // get requests and others from apphost or other to $context</span></pre></div><div id="line447"><br/></div><div id="line448"><pre><span class="token T_INLINE_HTML">    $runner = new ServiceRunner($this-&gt;appHost, $context);</span></pre></div><div id="line449"><br/></div><div id="line450"><pre><span class="token T_INLINE_HTML">    $response = $runner-&gt;execute($request, $instance, $requestDto);</span></pre></div><div id="line451"><br/></div><div id="line452"><pre><span class="token T_INLINE_HTML">    return $response;</span></pre></div><div id="line453"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line454"><br/></div><div id="line455"><pre><span class="token T_INLINE_HTML">  public function executeAsync($requestDto, IRequest $request)</span></pre></div><div id="line456"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line457"><pre><span class="token T_INLINE_HTML">    self::injectRequestDto($request, $requestDto);</span></pre></div><div id="line458"><pre><span class="token T_INLINE_HTML">    //$requestType -&gt; resulve // set request-&gt;operationName from type resolved</span></pre></div><div id="line459"><pre><span class="token T_INLINE_HTML">    $requestType = "";</span></pre></div><div id="line460"><pre><span class="token T_INLINE_HTML">    $handlerFn = $this-&gt;getService($requestType);</span></pre></div><div id="line461"><br/></div><div id="line462"><br/></div><div id="line463"><pre><span class="token T_INLINE_HTML">    // return async, response is read as Async</span></pre></div><div id="line464"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line465"><br/></div><div id="line466"><pre><span class="token T_INLINE_HTML">  public function executeWithEmptyRequest($requestDto)</span></pre></div><div id="line467"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line468"><pre><span class="token T_INLINE_HTML">    throw new NotImplementedException();</span></pre></div><div id="line469"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line470"><br/></div><div id="line471"><pre><span class="token T_INLINE_HTML">  public function executeWithCurrentRequest(IRequest $request)</span></pre></div><div id="line472"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line473"><pre><span class="token T_INLINE_HTML">    throw new NotImplementedException();</span></pre></div><div id="line474"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line475"><br/></div><div id="line476"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line477"><pre><span class="token T_INLINE_HTML">   * Inject the IRequest in Service</span></pre></div><div id="line478"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line479"><pre><span class="token T_INLINE_HTML">  static function injectRequestContext($service, IRequest $requestContext)</span></pre></div><div id="line480"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line481"><pre><span class="token T_INLINE_HTML">    if(is_null($requestContext)) return;</span></pre></div><div id="line482"><br/></div><div id="line483"><pre><span class="token T_INLINE_HTML">    $serviceRequiresContext = $service; // as IRequiresContext</span></pre></div><div id="line484"><pre><span class="token T_INLINE_HTML">    if($service instanceof IRequiresRequest)</span></pre></div><div id="line485"><br/></div><div id="line486"><pre><span class="token T_INLINE_HTML">    if(!is_null($serviceRequiresContext))</span></pre></div><div id="line487"><pre><span class="token T_INLINE_HTML">    {</span></pre></div><div id="line488"><pre><span class="token T_INLINE_HTML">      $serviceRequiresContext-&gt;setRequest($requestContext);</span></pre></div><div id="line489"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line490"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line491"><br/></div><div id="line492"><pre><span class="token T_INLINE_HTML">  static function injectRequestDto(IRequest $context, $dto)</span></pre></div><div id="line493"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line494"><pre><span class="token T_INLINE_HTML">    $context-&gt;setDto($dto);</span></pre></div><div id="line495"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line496"><br/></div><div id="line497"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line498"><pre><span class="token T_INLINE_HTML">	 *  Execute MQ with requestContext</span></pre></div><div id="line499"><pre><span class="token T_INLINE_HTML">	 */</span></pre></div><div id="line500"><pre><span class="token T_INLINE_HTML">  public function executeMessageWithRequest(IMessage $dto, IRequest $requestContext)</span></pre></div><div id="line501"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line502"><pre><span class="token T_INLINE_HTML">    throw new NotImplementedException();</span></pre></div><div id="line503"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line504"><br/></div><div id="line505"><br/></div><div id="line506"><pre><span class="token T_INLINE_HTML">}</span></pre></div><div id="line507"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2015 by Arne Blankerts</span></footer></body></html>
