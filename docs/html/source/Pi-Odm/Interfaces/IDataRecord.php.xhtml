<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of IDataRecord.php</title><link rel="stylesheet" type="text/css" href="../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file IDataRecord.php</h1><p>
                        Size: 2,566 Bytes - Last Modified: 2015-06-05T23:18:07+00:00</p><section><h2><small>/home/gui/workspace/pi-services/src/Pi-Odm/Interfaces/</small>IDataRecord.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a></td><td class="line"><div id="line1"><pre><span class="token T_INLINE_HTML">&lt;?hh</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_INLINE_HTML">namespace Pi\Odm\Interfaces;</span></pre></div><div id="line4"><br/></div><div id="line5"><pre><span class="token T_INLINE_HTML">/**</span></pre></div><div id="line6"><pre><span class="token T_INLINE_HTML"> * Provides access to the document properties values within each document for a DataReader</span></pre></div><div id="line7"><pre><span class="token T_INLINE_HTML"> */</span></pre></div><div id="line8"><pre><span class="token T_INLINE_HTML">interface IDataRecord {</span></pre></div><div id="line9"><br/></div><div id="line10"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line11"><pre><span class="token T_INLINE_HTML">   * Count the properties in the current document</span></pre></div><div id="line12"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line13"><pre><span class="token T_INLINE_HTML">  public function getFieldCount();</span></pre></div><div id="line14"><pre><span class="token T_INLINE_HTML">  public function item(string $key);</span></pre></div><div id="line15"><br/></div><div id="line16"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line17"><pre><span class="token T_INLINE_HTML">   * Gets the value located at the specified index.</span></pre></div><div id="line18"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line19"><pre><span class="token T_INLINE_HTML">  public function itemByIndex($index);</span></pre></div><div id="line20"><br/></div><div id="line21"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line22"><pre><span class="token T_INLINE_HTML">   * Gets the value of the specified property as a Boolean.</span></pre></div><div id="line23"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line24"><pre><span class="token T_INLINE_HTML">  public function getBoolean(string $key);</span></pre></div><div id="line25"><br/></div><div id="line26"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line27"><pre><span class="token T_INLINE_HTML">   * Gets the 8-bit unsigned integer value of the specified property</span></pre></div><div id="line28"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line29"><pre><span class="token T_INLINE_HTML">  public function getByte(string $key);</span></pre></div><div id="line30"><br/></div><div id="line31"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line32"><pre><span class="token T_INLINE_HTML">   * Reads a stream of bytes from the specified property offset into the buffer as an array, starting at the given buffer offset.</span></pre></div><div id="line33"><pre><span class="token T_INLINE_HTML">   * @param string $key          The index within the field from which to start the read operation.</span></pre></div><div id="line34"><pre><span class="token T_INLINE_HTML">   * @param [type] $fieldOffset  The index within the field from which to start the read operation.</span></pre></div><div id="line35"><pre><span class="token T_INLINE_HTML">   * @param [type] $buffer       The buffer into which to read the stream of bytes.</span></pre></div><div id="line36"><pre><span class="token T_INLINE_HTML">   * @param [type] $bufferOffset The index for buffer to start the read operation.</span></pre></div><div id="line37"><pre><span class="token T_INLINE_HTML">   * @param [type] $length       The number of bytes to read.</span></pre></div><div id="line38"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line39"><pre><span class="token T_INLINE_HTML">  public function getBytes(string $key, $fieldOffset, $buffer, $bufferOffset, $length);</span></pre></div><div id="line40"><br/></div><div id="line41"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line42"><pre><span class="token T_INLINE_HTML">   * [getData description]</span></pre></div><div id="line43"><pre><span class="token T_INLINE_HTML">   * @param string $key Returns an IDataReader for the specified column ordinal.</span></pre></div><div id="line44"><pre><span class="token T_INLINE_HTML">   * @return IDataReader</span></pre></div><div id="line45"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line46"><pre><span class="token T_INLINE_HTML">  public function getData(string $key);</span></pre></div><div id="line47"><br/></div><div id="line48"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line49"><pre><span class="token T_INLINE_HTML">   * Gets the date and time data value of the specified field.</span></pre></div><div id="line50"><pre><span class="token T_INLINE_HTML">   * @param string $key [description]</span></pre></div><div id="line51"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line52"><pre><span class="token T_INLINE_HTML">  public function getDateTime(string $key);</span></pre></div><div id="line53"><br/></div><div id="line54"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line55"><pre><span class="token T_INLINE_HTML">   * Gets the fixed-position numeric value of the specified field.</span></pre></div><div id="line56"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line57"><pre><span class="token T_INLINE_HTML">  public function getDecimal(string $key);</span></pre></div><div id="line58"><br/></div><div id="line59"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line60"><pre><span class="token T_INLINE_HTML">   * Gets the double-precision floating point number of the specified field.</span></pre></div><div id="line61"><pre><span class="token T_INLINE_HTML">   * @param string $key [description]</span></pre></div><div id="line62"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line63"><pre><span class="token T_INLINE_HTML">  public function getDouble(string $key);</span></pre></div><div id="line64"><br/></div><div id="line65"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line66"><pre><span class="token T_INLINE_HTML">   * Gets the string value of the specified field.</span></pre></div><div id="line67"><pre><span class="token T_INLINE_HTML">   * @param string $key [description]</span></pre></div><div id="line68"><pre><span class="token T_INLINE_HTML">   * @return string</span></pre></div><div id="line69"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line70"><pre><span class="token T_INLINE_HTML">  public function getString(string $key) : string;</span></pre></div><div id="line71"><br/></div><div id="line72"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line73"><pre><span class="token T_INLINE_HTML">   * Return the value of the specified field.</span></pre></div><div id="line74"><pre><span class="token T_INLINE_HTML">   * @param strng $key [description]</span></pre></div><div id="line75"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line76"><pre><span class="token T_INLINE_HTML">  public function getValue(strng $key);</span></pre></div><div id="line77"><br/></div><div id="line78"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line79"><pre><span class="token T_INLINE_HTML">   * Populates an array of objects with the column values of the current record.</span></pre></div><div id="line80"><pre><span class="token T_INLINE_HTML">   * @param string $key [description]</span></pre></div><div id="line81"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line82"><pre><span class="token T_INLINE_HTML">  public function getValues(string $key);</span></pre></div><div id="line83"><br/></div><div id="line84"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line85"><pre><span class="token T_INLINE_HTML">   * Return whether the specified field is set to null.</span></pre></div><div id="line86"><pre><span class="token T_INLINE_HTML">   * @param string $key [description]</span></pre></div><div id="line87"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line88"><pre><span class="token T_INLINE_HTML">  public function isDbNull(string $key);</span></pre></div><div id="line89"><pre><span class="token T_INLINE_HTML">}</span></pre></div><div id="line90"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2015 by Arne Blankerts</span></footer></body></html>
