<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of MongoConnection.php</title><link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/><link rel="stylesheet" href="../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../index.xhtml">Overview</a></li><li class="separator"><a href="../../namespaces.xhtml">Namespaces</a></li><li><a href="../../interfaces.xhtml">Interfaces</a></li><li><a href="../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../index.xhtml">Overview</a></li><li class="separator"><a href="../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file MongoConnection.php</h1><p>
                        Size: 4,654 Bytes - Last Modified: 2015-06-05T23:18:07+00:00</p><section><h2><small>/home/gui/workspace/pi-services/src/Pi-Odm/</small>MongoConnection.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker" href="#line183">183</a><a class="anker" href="#line184">184</a><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a><a class="anker" href="#line187">187</a><a class="anker" href="#line188">188</a><a class="anker" href="#line189">189</a><a class="anker" href="#line190">190</a><a class="anker" href="#line191">191</a><a class="anker" href="#line192">192</a><a class="anker" href="#line193">193</a><a class="anker" href="#line194">194</a><a class="anker" href="#line195">195</a><a class="anker" href="#line196">196</a><a class="anker" href="#line197">197</a><a class="anker" href="#line198">198</a><a class="anker" href="#line199">199</a><a class="anker" href="#line200">200</a><a class="anker" href="#line201">201</a><a class="anker" href="#line202">202</a><a class="anker" href="#line203">203</a><a class="anker" href="#line204">204</a><a class="anker" href="#line205">205</a><a class="anker" href="#line206">206</a><a class="anker" href="#line207">207</a><a class="anker" href="#line208">208</a></td><td class="line"><div id="line1"><pre><span class="token T_INLINE_HTML">&lt;?hh</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_INLINE_HTML">namespace Pi\Odm;</span></pre></div><div id="line4"><br/></div><div id="line5"><pre><span class="token T_INLINE_HTML">use Pi\EventManager;</span></pre></div><div id="line6"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IDatabaseConnection;</span></pre></div><div id="line7"><pre><span class="token T_INLINE_HTML">use Pi\Odm\MongoDatabase;</span></pre></div><div id="line8"><pre><span class="token T_INLINE_HTML">use Pi\Odm\MongoTransaction;</span></pre></div><div id="line9"><pre><span class="token T_INLINE_HTML">use Pi\Odm\MongoCommand;</span></pre></div><div id="line10"><pre><span class="token T_INLINE_HTML">use Pi\Odm\MongoCommandBuilder;</span></pre></div><div id="line11"><pre><span class="token T_INLINE_HTML">use Pi\Odm\MongoUpdateQueryBuilder;</span></pre></div><div id="line12"><pre><span class="token T_INLINE_HTML">use Pi\Odm\MongoConnectionTunnel;</span></pre></div><div id="line13"><pre><span class="token T_INLINE_HTML">use Pi\Odm\Interfaces\IDbTransaction;</span></pre></div><div id="line14"><pre><span class="token T_INLINE_HTML">use Pi\Odm\Interfaces\IDbConnection;</span></pre></div><div id="line15"><pre><span class="token T_INLINE_HTML">use Pi\Odm\Interfaces\IEntityMetaDataFactory;</span></pre></div><div id="line16"><pre><span class="token T_INLINE_HTML">use Pi\NotImplementedException;</span></pre></div><div id="line17"><pre><span class="token T_INLINE_HTML">use Pi\Odm\Query\UpdateQueryBuilder;</span></pre></div><div id="line18"><pre><span class="token T_INLINE_HTML">use Pi\Odm\Query\QueryBuilder;</span></pre></div><div id="line19"><pre><span class="token T_INLINE_HTML">use Pi\Odm\MongoEntity;</span></pre></div><div id="line20"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IContainer;</span></pre></div><div id="line21"><pre><span class="token T_INLINE_HTML">use Pi\Interfaces\IContainable;</span></pre></div><div id="line22"><pre><span class="token T_INLINE_HTML">use Pi\Odm\Repository\RepositoryFactory;</span></pre></div><div id="line23"><br/></div><div id="line24"><pre><span class="token T_INLINE_HTML">class MongoConnection implements IDbConnection, IContainable{</span></pre></div><div id="line25"><br/></div><div id="line26"><br/></div><div id="line27"><pre><span class="token T_INLINE_HTML">  protected $connectionString;</span></pre></div><div id="line28"><br/></div><div id="line29"><pre><span class="token T_INLINE_HTML">  protected ?MongoTransaction $transaction = null;</span></pre></div><div id="line30"><br/></div><div id="line31"><pre><span class="token T_INLINE_HTML">  protected $dbTunnel;</span></pre></div><div id="line32"><br/></div><div id="line33"><pre><span class="token T_INLINE_HTML">  protected $ioc;</span></pre></div><div id="line34"><br/></div><div id="line35"><pre><span class="token T_INLINE_HTML">  protected $documentManager;</span></pre></div><div id="line36"><br/></div><div id="line37"><pre><span class="token T_INLINE_HTML">  protected $unitWork;</span></pre></div><div id="line38"><br/></div><div id="line39"><pre><span class="token T_INLINE_HTML">  public $repositories = Map{};</span></pre></div><div id="line40"><br/></div><div id="line41"><pre><span class="token T_INLINE_HTML">  public function __construct(</span></pre></div><div id="line42"><pre><span class="token T_INLINE_HTML">    protected \MongoClient $client, </span></pre></div><div id="line43"><pre><span class="token T_INLINE_HTML">    protected EventManager $eventManager,</span></pre></div><div id="line44"><pre><span class="token T_INLINE_HTML">    protected IEntityMetaDataFactory $classMetaDataFactory)</span></pre></div><div id="line45"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line46"><pre><span class="token T_INLINE_HTML">    //$this-&gt;connectionString = $client-&gt;getConnections()[0]["hash"];</span></pre></div><div id="line47"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line48"><br/></div><div id="line49"><pre><span class="token T_INLINE_HTML"> </span></pre></div><div id="line50"><pre><span class="token T_INLINE_HTML">  public function ioc(IContainer $container)</span></pre></div><div id="line51"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line52"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line53"><br/></div><div id="line54"><pre><span class="token T_INLINE_HTML">  public function insert&lt;T&gt;(T $entity)</span></pre></div><div id="line55"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line56"><pre><span class="token T_INLINE_HTML">    $repo = $this-&gt;getRepository($entity);</span></pre></div><div id="line57"><pre><span class="token T_INLINE_HTML">    $repo-&gt;insert($entity);</span></pre></div><div id="line58"><pre><span class="token T_INLINE_HTML">    return $entity;</span></pre></div><div id="line59"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line60"><br/></div><div id="line61"><pre><span class="token T_INLINE_HTML">  public function selectById($entity, \MongoId $id)</span></pre></div><div id="line62"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line63"><pre><span class="token T_INLINE_HTML">    $repo = $this-&gt;getRepository($entity);</span></pre></div><div id="line64"><pre><span class="token T_INLINE_HTML">    return $repo-&gt;get($id);</span></pre></div><div id="line65"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line66"><br/></div><div id="line67"><pre><span class="token T_INLINE_HTML">  public function select($query = null)</span></pre></div><div id="line68"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line69"><br/></div><div id="line70"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line71"><br/></div><div id="line72"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line73"><pre><span class="token T_INLINE_HTML">   * Save the Entity instance</span></pre></div><div id="line74"><pre><span class="token T_INLINE_HTML">   * If the document is already managed by UnitWork, the changes are performed from changeSets</span></pre></div><div id="line75"><pre><span class="token T_INLINE_HTML">   * If it's managed, the update is done only on set properties from the entity. Properties set to null will be unset</span></pre></div><div id="line76"><pre><span class="token T_INLINE_HTML">   * @param  MongoEntity $entity [description]</span></pre></div><div id="line77"><pre><span class="token T_INLINE_HTML">   * @return [type]              [description]</span></pre></div><div id="line78"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line79"><pre><span class="token T_INLINE_HTML">  public function save($entity)</span></pre></div><div id="line80"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line81"><pre><span class="token T_INLINE_HTML">    $builder = new UpdateQueryBuilder($entity, $this-&gt;documentManager);</span></pre></div><div id="line82"><pre><span class="token T_INLINE_HTML">    $query = $builder-&gt;createQuery();</span></pre></div><div id="line83"><pre><span class="token T_INLINE_HTML">    $query-&gt;execute();</span></pre></div><div id="line84"><br/></div><div id="line85"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line86"><br/></div><div id="line87"><pre><span class="token T_INLINE_HTML">  public function update($entity)</span></pre></div><div id="line88"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line89"><pre><span class="token T_INLINE_HTML">    $builder = new QueryBuilder($this-&gt;documentManager, get_class($entity));</span></pre></div><div id="line90"><pre><span class="token T_INLINE_HTML">    $builder-&gt;update();</span></pre></div><div id="line91"><pre><span class="token T_INLINE_HTML">    return $builder;</span></pre></div><div id="line92"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line93"><br/></div><div id="line94"><pre><span class="token T_INLINE_HTML">  public function updateById(\MongoId $id, MongoUpdateQueryBuilder $builder)</span></pre></div><div id="line95"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line96"><pre><span class="token T_INLINE_HTML">    $commands = $builder-&gt;getQuery();</span></pre></div><div id="line97"><pre><span class="token T_INLINE_HTML">    return $this-&gt;client-&gt;update(array('_id' =&gt; $id));</span></pre></div><div id="line98"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line99"><pre><span class="token T_INLINE_HTML">  public function deletebyId($id)</span></pre></div><div id="line100"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line101"><br/></div><div id="line102"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line103"><br/></div><div id="line104"><pre><span class="token T_INLINE_HTML">  public function flush()</span></pre></div><div id="line105"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line106"><br/></div><div id="line107"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line108"><br/></div><div id="line109"><pre><span class="token T_INLINE_HTML">  public function getMongoClient()</span></pre></div><div id="line110"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line111"><pre><span class="token T_INLINE_HTML">    return $this-&gt;client;</span></pre></div><div id="line112"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line113"><br/></div><div id="line114"><pre><span class="token T_INLINE_HTML">  public function tunnel()</span></pre></div><div id="line115"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line116"><pre><span class="token T_INLINE_HTML">    return $this-&gt;dbTunnel;</span></pre></div><div id="line117"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line118"><br/></div><div id="line119"><pre><span class="token T_INLINE_HTML">  public function getConnectionString()</span></pre></div><div id="line120"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line121"><pre><span class="token T_INLINE_HTML">    return $this-&gt;connectionString;</span></pre></div><div id="line122"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line123"><pre><span class="token T_INLINE_HTML">  public function getConnectionTimeout()</span></pre></div><div id="line124"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line125"><pre><span class="token T_INLINE_HTML">    return $this-&gt;timeout;</span></pre></div><div id="line126"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line127"><pre><span class="token T_INLINE_HTML">  public function getDatabase()</span></pre></div><div id="line128"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line129"><pre><span class="token T_INLINE_HTML">    return $this-&gt;database;</span></pre></div><div id="line130"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line131"><pre><span class="token T_INLINE_HTML">  public function getState()</span></pre></div><div id="line132"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line133"><pre><span class="token T_INLINE_HTML">    throw new NotImplementedException();</span></pre></div><div id="line134"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line135"><br/></div><div id="line136"><pre><span class="token T_INLINE_HTML">  private function assertTransactionNotCreated() : void</span></pre></div><div id="line137"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line138"><pre><span class="token T_INLINE_HTML">    if(!is_null($this-&gt;transaction)){</span></pre></div><div id="line139"><pre><span class="token T_INLINE_HTML">      throw new \Exception('The MongoTransaction doesnt support parallel transactions. Transaction already exists');</span></pre></div><div id="line140"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line141"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line142"><br/></div><div id="line143"><pre><span class="token T_INLINE_HTML">  private function setTransaction($level = null)</span></pre></div><div id="line144"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line145"><pre><span class="token T_INLINE_HTML">    $this-&gt;transaction = new MongoTransaction($this, $level);</span></pre></div><div id="line146"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line147"><br/></div><div id="line148"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line149"><pre><span class="token T_INLINE_HTML">   * Begins a database transaction.</span></pre></div><div id="line150"><pre><span class="token T_INLINE_HTML">   * @return IDbTransaction</span></pre></div><div id="line151"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line152"><pre><span class="token T_INLINE_HTML">  public function beginTransaction()</span></pre></div><div id="line153"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line154"><pre><span class="token T_INLINE_HTML">    $this-&gt;assertTransactionNotCreated();</span></pre></div><div id="line155"><pre><span class="token T_INLINE_HTML">    $this-&gt;setTransaction();</span></pre></div><div id="line156"><pre><span class="token T_INLINE_HTML">    return $this-&gt;transaction;</span></pre></div><div id="line157"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line158"><pre><span class="token T_INLINE_HTML">  public function beginIsolatedTransaction($level)</span></pre></div><div id="line159"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line160"><pre><span class="token T_INLINE_HTML">    $this-&gt;assertTransactionNotCreated();</span></pre></div><div id="line161"><pre><span class="token T_INLINE_HTML">    $this-&gt;setTransaction($level);</span></pre></div><div id="line162"><pre><span class="token T_INLINE_HTML">    return $this-&gt;transaction;</span></pre></div><div id="line163"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line164"><br/></div><div id="line165"><pre><span class="token T_INLINE_HTML">  public function dropTransaction()</span></pre></div><div id="line166"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line167"><pre><span class="token T_INLINE_HTML">    $this-&gt;transaction = null;</span></pre></div><div id="line168"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line169"><br/></div><div id="line170"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line171"><pre><span class="token T_INLINE_HTML">   * Changes the current database for an open Connection object</span></pre></div><div id="line172"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line173"><pre><span class="token T_INLINE_HTML">  public function changeDatabase()</span></pre></div><div id="line174"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line175"><pre><span class="token T_INLINE_HTML">    throw new NotImplementedException();</span></pre></div><div id="line176"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line177"><br/></div><div id="line178"><pre><span class="token T_INLINE_HTML">  public function close()</span></pre></div><div id="line179"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line180"><pre><span class="token T_INLINE_HTML">    throw new NotImplementedException();</span></pre></div><div id="line181"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line182"><br/></div><div id="line183"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line184"><pre><span class="token T_INLINE_HTML">   * Create and return an command associated with the connection</span></pre></div><div id="line185"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line186"><pre><span class="token T_INLINE_HTML">  public function createCommand()</span></pre></div><div id="line187"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line188"><br/></div><div id="line189"><pre><span class="token T_INLINE_HTML">    throw new NotImplementedException();</span></pre></div><div id="line190"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line191"><pre><span class="token T_INLINE_HTML">  /**</span></pre></div><div id="line192"><pre><span class="token T_INLINE_HTML">   * Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. (Inherited from IDisposable.)</span></pre></div><div id="line193"><pre><span class="token T_INLINE_HTML">   * @return [type] [description]</span></pre></div><div id="line194"><pre><span class="token T_INLINE_HTML">   */</span></pre></div><div id="line195"><pre><span class="token T_INLINE_HTML">  public function dispose()</span></pre></div><div id="line196"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line197"><pre><span class="token T_INLINE_HTML">    throw new NotImplementedException();</span></pre></div><div id="line198"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line199"><br/></div><div id="line200"><pre><span class="token T_INLINE_HTML">  private function getRepository($entity)</span></pre></div><div id="line201"><pre><span class="token T_INLINE_HTML">  {</span></pre></div><div id="line202"><pre><span class="token T_INLINE_HTML">    if(!$this-&gt;repositories-&gt;contains(get_class($entity))){</span></pre></div><div id="line203"><pre><span class="token T_INLINE_HTML">      $this-&gt;repositories[get_class($entity)] = $this-&gt;unitWork-&gt;getRepository(get_class($entity));</span></pre></div><div id="line204"><pre><span class="token T_INLINE_HTML">    }</span></pre></div><div id="line205"><pre><span class="token T_INLINE_HTML">    return $this-&gt;repositories[get_class($entity)];</span></pre></div><div id="line206"><pre><span class="token T_INLINE_HTML">  }</span></pre></div><div id="line207"><pre><span class="token T_INLINE_HTML">}</span></pre></div><div id="line208"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2015 by Arne Blankerts</span></footer></body></html>
